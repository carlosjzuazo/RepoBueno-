{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getAllPostsRequest } from '../requests';\nexport const HookPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        setLoading(true);\n        const data = await getAllPostsRequest();\n        setPosts(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPosts();\n  }, []);\n\n  const addPost = post => {\n    setPosts([post, ...posts]);\n  };\n\n  const erasePost = id => {\n    setPosts(posts.filter(post => post.id !== id));\n  };\n\n  return {\n    posts,\n    loading,\n    error,\n    addPost,\n    erasePost\n  };\n};\n\n_s(HookPosts, \"ok8foY8gcvyzARQ2tOEX9/uHXPU=\");\n\n_c = HookPosts;\nexport default HookPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookPosts\");","map":{"version":3,"names":["useState","useEffect","getAllPostsRequest","HookPosts","posts","setPosts","loading","setLoading","error","setError","loadPosts","data","message","addPost","post","erasePost","id","filter"],"sources":["C:/Users/nanot/OneDrive/Escritorio/RepoBueno/RepoBueno-/RepoBueno-/link-frontend/src/hooks/HookPosts.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { getAllPostsRequest } from '../requests'\r\n\r\nexport const HookPosts = () => {\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    const loadPosts = async () => {\r\n      try {\r\n        setLoading(true)\r\n\r\n        const data = await getAllPostsRequest()\r\n\r\n        setPosts(data)\r\n      } catch (error) {\r\n        setError(error.message)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    loadPosts()\r\n  }, [])\r\n\r\n  const addPost = (post) => {\r\n    setPosts([post, ...posts])\r\n  }\r\n\r\n  const erasePost = (id) => {\r\n    setPosts(posts.filter((post) => post.id !== id))\r\n  }\r\n\r\n  return { posts, loading, error, addPost, erasePost }\r\n}\r\n\r\nexport default HookPosts\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,aAAnC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC5B,IAAI;QACFH,UAAU,CAAC,IAAD,CAAV;QAEA,MAAMI,IAAI,GAAG,MAAMT,kBAAkB,EAArC;QAEAG,QAAQ,CAACM,IAAD,CAAR;MACD,CAND,CAME,OAAOH,KAAP,EAAc;QACdC,QAAQ,CAACD,KAAK,CAACI,OAAP,CAAR;MACD,CARD,SAQU;QACRL,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAZD;;IAaAG,SAAS;EACV,CAfQ,EAeN,EAfM,CAAT;;EAiBA,MAAMG,OAAO,GAAIC,IAAD,IAAU;IACxBT,QAAQ,CAAC,CAACS,IAAD,EAAO,GAAGV,KAAV,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMW,SAAS,GAAIC,EAAD,IAAQ;IACxBX,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYA,EAAnC,CAAD,CAAR;EACD,CAFD;;EAIA,OAAO;IAAEZ,KAAF;IAASE,OAAT;IAAkBE,KAAlB;IAAyBK,OAAzB;IAAkCE;EAAlC,CAAP;AACD,CA/BM;;GAAMZ,S;;KAAAA,S;AAiCb,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}