{"ast":null,"code":"export const getAllPostsRequest = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getThisPostRequest = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/post/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const registerUserRequest = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/user`, {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\nexport const loginUserRequest = async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/login`, {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getMyDataRequest = async token => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/user`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const sendPostRequest = async _ref3 => {\n  let {\n    data,\n    token\n  } = _ref3;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const deletePostRequest = async _ref4 => {\n  let {\n    id,\n    token\n  } = _ref4;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/post/${id}`, {\n    method: 'DELETE',\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\nexport const getUserPostsRequest = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/user/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getAllUserPostsRequest = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/user/${id}/posts`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};","map":{"version":3,"names":["getAllPostsRequest","response","fetch","process","env","REACT_APP_BACKEND","json","ok","Error","message","data","getThisPostRequest","id","registerUserRequest","email","password","method","body","JSON","stringify","headers","loginUserRequest","getMyDataRequest","token","Authorization","sendPostRequest","deletePostRequest","getUserPostsRequest","getAllUserPostsRequest"],"sources":["C:/Users/nanot/OneDrive/Escritorio/RepoBueno/RepoBueno-/RepoBueno-/link-frontend/src/requests/index.js"],"sourcesContent":["export const getAllPostsRequest = async () => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}`);\r\n  \r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n    return json.data;\r\n  };\r\n  \r\n  export const getThisPostRequest = async (id) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/post/${id}`);\r\n  \r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n    return json.data;\r\n  };\r\n  \r\n  export const registerUserRequest = async ({ email, password }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/user`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  \r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n  };\r\n  \r\n  export const loginUserRequest = async ({ email, password }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/login`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n    return json.data;\r\n  };\r\n  \r\n  export const getMyDataRequest = async (token) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/user`, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n    return json.data;\r\n  };\r\n  \r\n  export const sendPostRequest = async ({ data, token }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}`, {\r\n      method: 'POST',\r\n      body: data,\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n    return json.data;\r\n  };\r\n  \r\n  export const deletePostRequest = async ({ id, token }) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/post/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n  };\r\n  \r\n  export const getUserPostsRequest = async (id) => {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/user/${id}`);\r\n  \r\n    const json = await response.json();\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(json.message);\r\n    }\r\n    return json.data;\r\n  };\r\n  \r\n  export const getAllUserPostsRequest = async (id) => {\r\n      const response = await fetch(`${process.env.REACT_APP_BACKEND}/user/${id}/posts`);\r\n  \r\n      const json = await response.json();\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(json.message);\r\n      }\r\n      return json.data;\r\n    };\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}